# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'tests-linux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
      Python313:
        python.version: '3.13'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests, pytorch]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      set -xe
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/
    displayName: 'Test'

- job: 'doctests-linux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
      Python313:
        python.version: '3.13'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests, pytorch]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      set -xe
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/ --doctest-modules --ignore=tslearn/tests
    displayName: 'Doctest'

- job: 'tests-macOS'
  pool:
    vmImage: 'macos-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
      Python313:
        python.version: '3.13'

  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  
  - script: |
      set -xe
      python --version
      brew install openblas  # required due to https://github.com/numpy/numpy/issues/15947
      export OPENBLAS=$(brew --prefix openblas)
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests, pytorch]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      set -xe
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/
    displayName: 'Test'

- job: 'doctests-macOS'
  pool:
    vmImage: 'macos-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
      Python313:
        python.version: '3.13'

  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      brew install openblas  # required due to https://github.com/numpy/numpy/issues/15947
      export OPENBLAS=$(brew --prefix openblas)
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests, pytorch]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      set -xe
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/ --doctest-modules --ignore=tslearn/tests
    displayName: 'Doctest'

- job: 'tests-windows'
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
      Python313:
        python.version: '3.13'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
  
  - script: |
      python --version
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests, pytorch]'
    displayName: 'Install tslearn and dependencies for tests, torch included'
  
  - script: |
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/
    displayName: 'Test'

- job: 'tests-windows'
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
      Python313:
        python.version: '3.13'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      python --version
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests, pytorch]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/ --doctest-modules --ignore=tslearn/tests
    displayName: 'Doctest'

- job: 'tests-without_torch'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python310:
        python.version: '3.10'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      set -xe
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/
    displayName: 'Test'

- job: 'doctests-without_torch'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python310:
        python.version: '3.10'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      set -xe
      python -m pip install pytest-azurepipelines
      pip list
      python -m pytest -v tslearn/ --doctest-modules --ignore=tslearn/tests -k 'not tslearn.metrics.softdtw_variants.soft_dtw and not tslearn.metrics.softdtw_variants.cdist_soft_dtw and not tslearn.metrics.dtw_variants.dtw or tslearn.metrics.dtw_variants.dtw_'
    displayName: 'Doctest'

- job: 'codecov'  # must be a separate job to only disable Numbas's JIT here
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python310:
        python.version: '3.10'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    NUMBA_DISABLE_JIT: '1'  # special for coverage testing
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -e '.[tests, pytorch]'
    displayName: 'Install tslearn and dependencies for tests, torch included'

  - script: |
      set -xe
      python -m pip install pytest-azurepipelines
      python -m pip install coverage pytest-cov
      pip list
      python -m pytest -v tslearn/ --cov=tslearn
    displayName: 'Test'

  # Upload coverage to codecov.io
  - script: |
      bash <(curl -s https://codecov.io/bash) -v
    displayName: 'Upload coverage to codecov.io'
