# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- job: 'linux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt
      python -m pip install torch
    displayName: 'Install dependencies'

  - script: |
      set -xe
      python -m pip install -e .
    displayName: 'Install tslearn'

  - script: |
      set -xe
      python -m pip install pytest pytest-azurepipelines
      python -m pip install scikit-learn==1.2
      python -m pip install tensorflow==2.9.0
      python -m pytest -v tslearn/ --doctest-modules
    displayName: 'Test'

- job: 'linux_without_torch'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python310:
        python.version: '3.10'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt
      python -m pip uninstall torch
    displayName: 'Install dependencies'

  - script: |
      set -xe
      python -m pip install -e .
    displayName: 'Install tslearn'

  - script: |
      set -xe
      python -m pip install pytest pytest-azurepipelines
      python -m pip install scikit-learn==1.2
      python -m pip install tensorflow==2.9.0
      python -m pytest -v tslearn/ --doctest-modules -k 'not tslearn.metrics.softdtw_variants.soft_dtw and not tslearn.metrics.softdtw_variants.cdist_soft_dtw and not tslearn.metrics.dtw_variants.dtw or tslearn.metrics.dtw_variants.dtw_'
    displayName: 'Test'


- job: 'codecov'  # must be a separate job to only disable Numbas's JIT here
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python310:
        python.version: '3.10'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    NUMBA_DISABLE_JIT: '1'  # special for coverage testing
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      set -xe
      python --version
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt
      python -m pip install torch
    displayName: 'Install dependencies'

  - script: |
      set -xe
      python -m pip install -e .
    displayName: 'Install tslearn'

  - script: |
      set -xe
      python -m pip install pytest pytest-azurepipelines
      python -m pip install coverage pytest-cov
      python -m pip install cesium pandas stumpy
      python -m pip install scikit-learn==1.2
      python -m pip install tensorflow==2.9.0
      python -m pytest -v tslearn/ --doctest-modules --cov=tslearn
    displayName: 'Test'

  # Upload coverage to codecov.io
  - script: |
      bash <(curl -s https://codecov.io/bash) -v
    displayName: 'Upload coverage to codecov.io'


- job: 'macOS'
  pool:
    vmImage: 'macOS-12'
  strategy:
    matrix:
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  
  - script: |
      set -xe
      python --version
      brew install openblas  # required due to https://github.com/numpy/numpy/issues/15947
      export OPENBLAS=$(brew --prefix openblas)
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt
      python -m pip install torch
    displayName: 'Install dependencies'
  
  - script: |
      set -xe
      export OPENBLAS=$(brew --prefix openblas)
      python -m pip install -e .
    displayName: 'Install tslearn'
  
  - script: |
      set -xe
      python -m pip install pytest pytest-azurepipelines
      python -m pip install scikit-learn==1.2
      python -m pip install tensorflow==2.9.0
      python -m pytest -v tslearn/ --doctest-modules -k 'not test_all_estimators'
    displayName: 'Test'


- job: 'windows'
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python38:
        python_ver: '38'
        python.version: '3.8'
      Python39:
        python_ver: '39'
        python.version: '3.9'
      Python310:
        python_ver: '310'
        python.version: '3.10'
  variables:
    OMP_NUM_THREADS: '2'
    NUMBA_NUM_THREADS: '2'
    PIP_PREFER_BINARY: 'true'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
  
  - script: |
      python --version
      python -m pip install --upgrade pip
      python -m pip install -r requirements_nocast.txt
      python -m pip install torch
    displayName: 'Install dependencies'
  
  - script: |
      python -m pip install -e .
    displayName: 'Install tslearn'
  
  - script: |
      python -m pip install pytest pytest-azurepipelines
      python -m pip install scikit-learn==1.2
      python -m pip install tensorflow==2.9.0
      python -m pytest -v tslearn/ --doctest-modules --ignore tslearn/tests/test_estimators.py --ignore tslearn/utils/cast.py
    displayName: 'Test'
